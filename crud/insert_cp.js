const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('test2.db');

let sqls =[
  `insert into cp (pl,cpm) values (1,0.094);`,
  `insert into cp (pl,cpm) values (1.5,0.1351374322);`,
  `insert into cp (pl,cpm) values (2,0.16639787);`,
  `insert into cp (pl,cpm) values (2.5,0.1926509145);`,
  `insert into cp (pl,cpm) values (3,0.21573247);`,
  `insert into cp (pl,cpm) values (3.5,0.2365726554);`,
  `insert into cp (pl,cpm) values (4,0.25572005);`,
  `insert into cp (pl,cpm) values (4.5,0.2735303793);`,
  `insert into cp (pl,cpm) values (5,0.29024988);`,
  `insert into cp (pl,cpm) values (5.5,0.30605738);`,
  `insert into cp (pl,cpm) values (6,0.3210876);`,
  `insert into cp (pl,cpm) values (6.5,0.3354450348);`,
  `insert into cp (pl,cpm) values (7,0.34921268);`,
  `insert into cp (pl,cpm) values (7.5,0.3624577519);`,
  `insert into cp (pl,cpm) values (8,0.37523559);`,
  `insert into cp (pl,cpm) values (8.5,0.3875924143);`,
  `insert into cp (pl,cpm) values (9,0.39956728);`,
  `insert into cp (pl,cpm) values (9.5,0.4111935491);`,
  `insert into cp (pl,cpm) values (10,0.42250001);`,
  `insert into cp (pl,cpm) values (10.5,0.4329264137);`,
  `insert into cp (pl,cpm) values (11,0.44310755);`,
  `insert into cp (pl,cpm) values (11.5,0.4530599578);`,
  `insert into cp (pl,cpm) values (12,0.46279839);`,
  `insert into cp (pl,cpm) values (12.5,0.4723360778);`,
  `insert into cp (pl,cpm) values (13,0.48168495);`,
  `insert into cp (pl,cpm) values (13.5,0.4908558093);`,
  `insert into cp (pl,cpm) values (14,0.49985844);`,
  `insert into cp (pl,cpm) values (14.5,0.5087017592);`,
  `insert into cp (pl,cpm) values (15,0.51739395);`,
  `insert into cp (pl,cpm) values (15.5,0.5259425109);`,
  `insert into cp (pl,cpm) values (16,0.53435433);`,
  `insert into cp (pl,cpm) values (16.5,0.5426357606);`,
  `insert into cp (pl,cpm) values (17,0.55079269);`,
  `insert into cp (pl,cpm) values (17.5,0.5588305975);`,
  `insert into cp (pl,cpm) values (18,0.56675452);`,
  `insert into cp (pl,cpm) values (18.5,0.5745691494);`,
  `insert into cp (pl,cpm) values (19,0.58227891);`,
  `insert into cp (pl,cpm) values (19.5,0.5898879135);`,
  `insert into cp (pl,cpm) values (20,0.59740001);`,
  `insert into cp (pl,cpm) values (20.5,0.6048236601);`,
  `insert into cp (pl,cpm) values (21,0.61215729);`,
  `insert into cp (pl,cpm) values (21.5,0.6194041153);`,
  `insert into cp (pl,cpm) values (22,0.62656713);`,
  `insert into cp (pl,cpm) values (22.5,0.6336491816);`,
  `insert into cp (pl,cpm) values (23,0.64065295);`,
  `insert into cp (pl,cpm) values (23.5,0.6475809587);`,
  `insert into cp (pl,cpm) values (24,0.65443563);`,
  `insert into cp (pl,cpm) values (24.5,0.661219261);`,
  `insert into cp (pl,cpm) values (25,0.667934);`,
  `insert into cp (pl,cpm) values (25.5,0.6745818989);`,
  `insert into cp (pl,cpm) values (26,0.68116492);`,
  `insert into cp (pl,cpm) values (26.5,0.6876849043);`,
  `insert into cp (pl,cpm) values (27,0.69414365);`,
  `insert into cp (pl,cpm) values (27.5,0.7005428942);`,
  `insert into cp (pl,cpm) values (28,0.70688421);`,
  `insert into cp (pl,cpm) values (28.5,0.7131691023);`,
  `insert into cp (pl,cpm) values (29,0.71939909);`,
  `insert into cp (pl,cpm) values (29.5,0.7255756131);`,
  `insert into cp (pl,cpm) values (30,0.7317);`,
  `insert into cp (pl,cpm) values (30.5,0.7347410073);`,
  `insert into cp (pl,cpm) values (31,0.73776948);`,
  `insert into cp (pl,cpm) values (31.5,0.7407855701);`,
  `insert into cp (pl,cpm) values (32,0.74378943);`,
  `insert into cp (pl,cpm) values (32.5,0.746781204);`,
  `insert into cp (pl,cpm) values (33,0.74976104);`,
  `insert into cp (pl,cpm) values (33.5,0.7527291037);`,
  `insert into cp (pl,cpm) values (34,0.75568551);`,
  `insert into cp (pl,cpm) values (34.5,0.7586303686);`,
  `insert into cp (pl,cpm) values (35,0.76156384);`,
  `insert into cp (pl,cpm) values (35.5,0.7644860688);`,
  `insert into cp (pl,cpm) values (36,0.76739717);`,
  `insert into cp (pl,cpm) values (36.5,0.7702972739);`,
  `insert into cp (pl,cpm) values (37,0.7731865);`,
  `insert into cp (pl,cpm) values (37.5,0.7760649434);`,
  `insert into cp (pl,cpm) values (38,0.77893275);`,
  `insert into cp (pl,cpm) values (38.5,0.7817900625);`,
  `insert into cp (pl,cpm) values (39,0.78463697);`,
  `insert into cp (pl,cpm) values (39.5,0.7874735807);`,
  `insert into cp (pl,cpm) values (40,0.79030001);`,
  `insert into cp (pl,cpm) values (40.5,0.792803946731);`,
  `insert into cp (pl,cpm) values (41,0.79530001);`,
  `insert into cp (pl,cpm) values (41.5,0.7978038983716224);`,
  `insert into cp (pl,cpm) values (42,0.8003000020980835);`,
  `insert into cp (pl,cpm) values (42.5,0.8028038718775964);`,
  `insert into cp (pl,cpm) values (43,0.8052999973297119);`,
  `insert into cp (pl,cpm) values (43.5,0.8078038508470536);`,
  `insert into cp (pl,cpm) values (44,0.8102999925613403);`,
  `insert into cp (pl,cpm) values (44.5,0.812803835179168);`,
  `insert into cp (pl,cpm) values (45,0.8152999877929688);`,
  `insert into cp (pl,cpm) values (45.5,0.817803806620319);`,
  `insert into cp (pl,cpm) values (46,0.820299983024597);`,
  `insert into cp (pl,cpm) values (46.5,0.822803778631297);`,
  `insert into cp (pl,cpm) values (47,0.825299978256225);`,
  `insert into cp (pl,cpm) values (47.5,0.827803750922782);`,
  `insert into cp (pl,cpm) values (48,0.830299973487854);`,
  `insert into cp (pl,cpm) values (48.5,0.832803753381377);`,
  `insert into cp (pl,cpm) values (49,0.835300028324127);`,
  `insert into cp (pl,cpm) values (49.5,0.837803755931569);`,
  `insert into cp (pl,cpm) values (50,0.840300023555755);`,
  `insert into cp (pl,cpm) values (50.5,0.842803729);`,
  `insert into cp (pl,cpm) values (51,0.8453000188);`
  
]
  

for(let sql of sqls){
  db.serialize( () => {
	  db.run( sql, (error, row) => {
	  	if(error) {
	  		console.log('Error: ', error );
		  	return;
		  }
		  console.log( "データを追加しました" );
  	});
  });  
}